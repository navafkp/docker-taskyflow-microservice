version: '3'
services:

  nginx:
    image: nginx:latest
    container_name: docker-taskyflow-microservice-nginx-container-1
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    user: "nginx:nginx"
    depends_on:
      - docker-taskyflow-microservice-apiservice-container-1
      - docker-taskyflow-microservice-taskservice-container-1
      - docker-taskyflow-microservice-userservice-container-1
      - docker-taskyflow-microservice-notificationapp-container-1
    networks:
      - tasky-network
      
  docker-taskyflow-microservice-apiservice-container-1:
    image: navafkp/apiservice:latest
    container_name: 'docker-taskyflow-microservice-apiservice-container-1'
    depends_on:
      - docker-taskyflow-microservice-rabbitmq-container-1
    environment:
      - RABBITMQ_URL=amqp://taskyapp:1345@docker-taskyflow-microservice-rabbitmq-container-1:5672
    networks:
      - tasky-network
    ports:
      - "8000:8000"


  docker-taskyflow-microservice-taskservice-container-1:
    image: navafkp/taskservice:latest
    container_name: 'docker-taskyflow-microservice-taskservice-container-1'
    depends_on:
      - docker-taskyflow-microservice-rabbitmq-container-1
      - docker-taskyflow-microservice-postgres-task-1
    environment:
      - DATABASE_URL=postgres://postgres:1345@docker-taskyflow-microservice-postgres-task-1:5432/taskytask
      - RABBITMQ_URL=amqp://taskyapp:1345@docker-taskyflow-microservice-rabbitmq-container-1:5672
    networks:
      - tasky-network
    ports:
      - "8200:8200"



  docker-taskyflow-microservice-userservice-container-1:
    image: navafkp/userservice:latest
    container_name: "docker-taskyflow-microservice-userservice-container-1"
    depends_on:
      - docker-taskyflow-microservice-apiservice-container-1
      - docker-taskyflow-microservice-rabbitmq-container-1
      - docker-taskyflow-microservice-postgres-user-1
      
    environment:
      - DATABASE_URL=postgres://postgres:1345@docker-taskyflow-microservice-postgres-user-1:5432/taskyuser
      - RABBITMQ_URL=amqp://taskyapp:1345@docker-taskyflow-microservice-rabbitmq-container-1:5672
    networks:
        - tasky-network
    ports:
      - "8100:8100"


  docker-taskyflow-microservice-notificationapp-container-1:
    image: navafkp/notificationservice:latest
    container_name: "docker-taskyflow-microservice-notificationapp-container-1"
    depends_on:
      - docker-taskyflow-microservice-apiservice-container-1
      - docker-taskyflow-microservice-postgres-notification-1
      - docker-taskyflow-microservice-rabbitmq-container-1  
    environment:
      - DATABASE_URL=postgres://postgres:1345@docker-taskyflow-microservice-postgres-notification-1:5432/taskynotification
      - RABBITMQ_URL=amqp://taskyapp:1345@docker-taskyflow-microservice-rabbitmq-container-1:5672
    networks:
        - tasky-network
    ports:
      - "8300:8300"



  docker-taskyflow-microservice-postgres-user-1:
    image: navafkp/postgres:latest
    container_name: 'docker-taskyflow-microservice-postgres-user-1'
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 1345
      POSTGRES_DB: taskyuser
    networks:
        - tasky-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5    


  docker-taskyflow-microservice-postgres-task-1:
    image: navafkp/postgres:latest
    container_name: 'docker-taskyflow-microservice-postgres-task-1'
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 1345
      POSTGRES_DB: taskytask
    networks:
        - tasky-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5


  docker-taskyflow-microservice-postgres-notification-1:
    image: navafkp/postgres:latest
    container_name: 'docker-taskyflow-microservice-postgres-notification-1'
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 1345
      POSTGRES_DB: taskynotification
    networks:
      - tasky-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5


  docker-taskyflow-microservice-rabbitmq-container-1:
    image: navafkp/rabbitmq:latest
    container_name: 'docker-taskyflow-microservice-rabbitmq-container-1'
    environment:
      RABBITMQ_DEFAULT_USER: taskyapp
      RABBITMQ_DEFAULT_PASS: 1345
    networks:
      - tasky-network


networks:
  tasky-network:
    external: true
